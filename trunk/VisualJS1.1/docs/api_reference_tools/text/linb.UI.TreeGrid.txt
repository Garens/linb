>>>>>>>>>>>>>>>>>>>Events<<<<<<<<<<<<<<<


---------------------------------------
afterCellActive (profile, cell)

---------------------------------------
afterColumnMoved ( profile, fromId, toId )
Fired after column is moved.
profile:
fromId: string. Id of column being dragged.
toId: string. Id of row on which column is dropped on.
---------------------------------------
afterColumnSort (profile, id, order)
Fired before grid rows are sorted by one column.
profile:
id: string. Column id.
order: string. Could be "asc" or "desc".
---------------------------------------
afterCreated ( fun )

---------------------------------------
afterRendered ( fun )

---------------------------------------
afterRowActive (profile, row)

---------------------------------------
afterRowMoved ( profile, fromId, toId )
Fired after row is moved.
profile:
fromId: string. Id of row being dragged.
toId: string. Id of row on which row is dropped on.
---------------------------------------
afterValueSet ( fun )

---------------------------------------
afterValueUpdated ( fun )

---------------------------------------
beforeCellActive ( fun )

---------------------------------------
beforeClickEffect ( fun )

---------------------------------------
beforeColumnDrag ( profile, id )
Fired before column is drag.
profile:
id: string. Row id.
---------------------------------------
beforeColumnMoved ( profile, fromId, toId )
Fired before column is moved.
profile:
fromId: string. Id of column being dragged.
toId: string. Id of row on which column is dropped on.

---------------------------------------
beforeColumnSort (profile, id, order)
Fired before grid rows are sorted by one column.
profile:
id: string. Column id.
order: string. Could be "asc" or "desc".

---------------------------------------
beforeDestroy ( fun )

---------------------------------------
beforeHoverEffect ( fun )

---------------------------------------
beforeNextFocus ( fun )

---------------------------------------
beforeRowActive ( fun )

---------------------------------------
beforeRowDrag (profile,id)
Fired before row is drag.
profile:
id: string. Row id.

---------------------------------------
beforeRowMoved ( profile, fromId, toId))
Fired before row is moved.
profile:
fromId: string. Id of row being dragged.
toId: string. Id of row on which row is dropped on.

---------------------------------------
beforeValueSet ( fun )

---------------------------------------
beforeValueUpdated ( fun )

---------------------------------------
onDblClickRow (profile, row,e,src)

---------------------------------------
onHotKeydown ( fun )

---------------------------------------
onHotKeypress ( fun )

---------------------------------------
onHotKeyup ( fun )

---------------------------------------
onRequestData (profile, id, threadid)

>>>>>>>>>>>>>>>>>>>Instance Methods<<<<<<<<<<<<<<<


---------------------------------------
getActiveMode ( )
Determine grid active mode. 
returns: string. Active mode. Could be "row", "cell".
---------------------------------------
getAltRowsBg ( )

---------------------------------------
getCellDfWidth ( )
Get cell default width.
returns: integer. Cell width.
---------------------------------------
getColDragable ( )
Determine whether end user could change column order by dragging column header.
returns: boolean. True for could, false for couldn't.
---------------------------------------
getColDragKey ( )
Get column dragging key.
returns: string. column dragging key.
---------------------------------------
getColResizer ( )
Determine whether end user could change column width by dragging column header edge.
returns: boolean. True for could, false for couldn't.
---------------------------------------
getColSortable ( )
Determine whether end user could sort rows by clicking column header.
returns: boolean. True for could, false for couldn't.
---------------------------------------
getEditable ( )
Determine whether end user could edit grid.
returns: boolean. True for could, false for couldn't.
---------------------------------------
getHeader ( )
To specify what and how grid header is consist of. See setHeader() for more.
returns: object. Object which describes what and how grid header is consist of.
---------------------------------------
getHeaderHeight ( )
Get grid header height.
returns: integer. Header height.

---------------------------------------
getIniFold ( )

---------------------------------------
getMinColW ( )
Get Column minimum width.
returns: integer. Column minimum width.
---------------------------------------
getMinRowH ( )
Get row minimum height.
returns: integer. Row minimum height.
---------------------------------------
getRowDragable ( )
Determine whether end user could drag row.
returns: boolean. True for could, false for couldn't.
---------------------------------------
getRowDragKey ( )
Get row dragging key.
returns: string. Row dragging key.
---------------------------------------
getRowDragToAny ( )
Determine whether end user could drag row to other ui control.
returns: boolean. True for could, false for couldn't.
---------------------------------------
getRowHandler ( )
Determine whether row handler is visible or not.
returns: boolean. True for visible, false for invisible.
---------------------------------------
getRowHandlerWidth ( )
Get row handler width.
returns: integer. Row handler width.
---------------------------------------
getRowHeight ( )
Get Row height.
returns: integer. Row height.
---------------------------------------
getRowResizer ( )
Determine whether end user could change row height by dragging row handler edge.
returns: boolean. True for could, false for couldn't.
---------------------------------------
getRows ( )
Get rows object. See setRows() for more.
returns. object. Object which describe how rows are consist of.
---------------------------------------
insertRows ( arr, pid, base, before )
Insert rows into grid. Sample - insertRows([{id:'11',cells:['newrow1', '']},{id:'12',cells:['newrow2', '']}],'5', '6', true)
arr: row array. 
pid: string. Parent row id.
base: string. Id of the row before or after which new rows are inserted.
before: boolean. True for before base, false for after base.
---------------------------------------
openRow ( id, flag )
To expand a row which has children. Nothing to be done with childless row.
id: string. Row id.

---------------------------------------
openRows ( rows, flag )

---------------------------------------
refreshHeader ( header )

---------------------------------------
removeAllRows ( )
Remove all rows inside grid and make grid empty.
---------------------------------------
removeRows ( ids )
Remove rows. Sample - removeRows(['2','5'])
ids: string array. Id array of rows to be removed.

---------------------------------------
resetContent ( )

---------------------------------------
scrollTo ( pos )
Move vertical scroll bar to a specific position.
pos: integer. Scroll bar position.
---------------------------------------
setActiveMode ( value, flag )
Set active mode. 
value: string. Active mode. Could be "row", "cell".
---------------------------------------
setAltRowsBg ( value, flag )

---------------------------------------
setCellDfWidth ( value, flag )
Set cell default width.
value: integer. Cell width.
---------------------------------------
setColDragable ( value, flag )
Specify whether end user could change column order by dragging column header.
value: boolean. True for could, false for couldn't.
---------------------------------------
setColDragKey ( value, flag )
Set column dragging key.
value: string. column dragging key.
---------------------------------------
setColResizer ( value, flag )
Specify whether end user could change column width by dragging column header edge.
value: boolean. True for could, false for couldn't.
---------------------------------------
setColSortable ( value, flag )
Specify whether end user could sort rows by clicking column header.
value: boolean. True for could, false for couldn't.
---------------------------------------
setEditable ( value, flag )
Specify whether end user could edit grid.
value: boolean. True for could, false for couldn't.
---------------------------------------
setHeader ( v )
To specify what and how grid header is consist of. Sample - 
setHeader([{"id":"col1","caption":"col1","type":"input","width":50},{"id":"col2","caption":"col2","type":"input","width":80}]).
v: object. Object which describes what and how grid header is consist of.
---------------------------------------
setHeaderHeight ( value, flag )
Set grid header height.
value: integer. Header height.

---------------------------------------
setIniFold ( value, flag )

---------------------------------------
setMinColW ( value, flag )
Set Column minimum width.
value: integer. Column minimum width.
---------------------------------------
setMinRowH ( value, flag )
Set Row minimum height.
value: integer. Row minimum height.
---------------------------------------
setRowDragable ( value, flag )
Specify whether end user could drag row.
value: boolean. True for could, false for couldn't.
---------------------------------------
setRowDragKey ( value, flag )
Set row dragging key.
value: string. Row dragging key.
---------------------------------------
setRowDragToAny ( value, flag )
Specify whether end user could drag row to other ui control.
value: boolean. True for could, false for couldn't.
---------------------------------------
setRowHandler ( value, flag )
Set row handler visible or not.
value: boolean. True for visible, false for invisible.
---------------------------------------
setRowHandlerWidth ( value, flag )
Specify row handler width.
value: integer. Row handler width.
---------------------------------------
setRowHeight ( value, flag )
Set Row height.
value: integer. Row height.
---------------------------------------
setRowResizer ( value, flag )
Specify whether end user could change row height by dragging row handler edge.
value: boolean. True for could, false for couldn't.
---------------------------------------
setRows ( v )
Set grid content. Sample - 
setRows([{"id":"row1","cells":[{"value":"cell11"},{"value":"cell12"}],"tabindex":1},
	{"id":"row2","cells":[{"value":"cell21","type":"label"},{"value":"cell22"}],			"sub":[{"id":"row21","cells":[{"value":"cell31"},"value":"cell32","type":"number"}]}],"tabindex":1}])
v: object. Content object
---------------------------------------
updateCell ( cellId, value )
Update cell value.
cellId: string. Cell id.
value: object. New value.
---------------------------------------
updateCellbyRowCol ( rowId, colId, value )
Update a cell's value.
rowId: string. Id of the row where cell is at.
colId: string. Id of col where cell is at.
value: object. New value.
---------------------------------------
updateColumn ( colId, hashValue )

>>>>>>>>>>>>>>>>>>>Static Methods<<<<<<<<<<<<<<<


---------------------------------------
activeCell ( profile, id )

---------------------------------------
activeRow ( profile, id )

---------------------------------------
beforeSerialized ( profile )

---------------------------------------
changeCellValue ( profile, cellId, value )

---------------------------------------
editCell ( profile, cellId )

---------------------------------------
editCellbyRowCol ( profile, rowId, colId )

---------------------------------------
getCellId ( profile, rowId, colId )

---------------------------------------
getCellPro ( profile, cell, key )

---------------------------------------
iniProfile ( )

---------------------------------------
prepareData ( profile )

---------------------------------------
prepareHeader ( profile, arr )

---------------------------------------
prepareItems ( profile, arr, pid )

---------------------------------------
resize ( profile, w, h )

---------------------------------------
setSub ( profile, item, flag )

---------------------------------------
showTips ( profile, id, pos )

